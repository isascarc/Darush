// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyJob.Data;

#nullable disable

namespace MyJob.Migrations;

[DbContext(typeof(DataContext))]
[Migration("20230928084021_Fix-Salary")]
partial class FixSalary
{
    /// <inheritdoc />
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

        modelBuilder.Entity("MyJob.Entities.AppUser", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<string>("City")
                    .HasColumnType("TEXT");

                b.Property<DateTime>("Create")
                    .HasColumnType("TEXT");

                b.Property<DateOnly>("DateOfBirth")
                    .HasColumnType("TEXT");

                b.Property<bool>("Deleted")
                    .HasColumnType("INTEGER");

                b.Property<string>("Gender")
                    .HasColumnType("TEXT");

                b.Property<string>("KnownAs")
                    .HasColumnType("TEXT");

                b.Property<DateTime>("LastActive")
                    .HasColumnType("TEXT");

                b.Property<string>("LinkedinLink")
                    .HasColumnType("TEXT");

                b.Property<string>("Mail")
                    .HasColumnType("TEXT");

                b.Property<byte[]>("PasswordHash")
                    .IsRequired()
                    .HasColumnType("BLOB");

                b.Property<byte[]>("PasswordSalt")
                    .IsRequired()
                    .HasColumnType("BLOB");

                b.Property<string>("Phone")
                    .HasColumnType("TEXT");

                b.Property<string>("UserName")
                    .IsRequired()
                    .HasMaxLength(8)
                    .HasColumnType("TEXT");

                b.Property<string>("WebsiteLink")
                    .HasColumnType("TEXT");

                b.Property<string>("_savedJobs")
                    .HasColumnType("TEXT")
                    .HasColumnName("SavedJobs");

                b.HasKey("Id");

                b.ToTable("Users");
            });

        modelBuilder.Entity("MyJob.Entities.Applicant", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<DateTime>("Create")
                    .HasColumnType("TEXT");

                b.Property<int>("CvId")
                    .HasColumnType("INTEGER");

                b.Property<bool>("Deleted")
                    .HasColumnType("INTEGER");

                b.Property<int>("JobId")
                    .HasColumnType("INTEGER");

                b.Property<string>("LinkedinLink")
                    .HasColumnType("TEXT");

                b.Property<int>("UserId")
                    .HasColumnType("INTEGER");

                b.HasKey("Id");

                b.HasIndex("JobId");

                b.ToTable("Applicants");
            });

        modelBuilder.Entity("MyJob.Entities.CV", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<int>("AppUserId")
                    .HasColumnType("INTEGER");

                b.Property<DateTime>("DateOfAdded")
                    .HasColumnType("TEXT");

                b.Property<bool>("Deleted")
                    .HasColumnType("INTEGER");

                b.Property<byte[]>("FileContent")
                    .HasColumnType("BLOB");

                b.Property<bool>("IsDefault")
                    .HasColumnType("INTEGER");

                b.Property<string>("Name")
                    .HasColumnType("TEXT");

                b.Property<string>("Text")
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.HasIndex("AppUserId");

                b.ToTable("CVs");
            });

        modelBuilder.Entity("MyJob.Entities.Job", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<int>("Area")
                    .HasColumnType("INTEGER");

                b.Property<DateTime>("DateOfAdded")
                    .HasColumnType("TEXT");

                b.Property<bool>("Deleted")
                    .HasColumnType("INTEGER");

                b.Property<bool>("EnglishNeed")
                    .HasColumnType("INTEGER");

                b.Property<bool>("Found")
                    .HasColumnType("INTEGER");

                b.Property<DateTime>("FoundDate")
                    .HasColumnType("TEXT");

                b.Property<int>("RecruiterId")
                    .HasColumnType("INTEGER");

                b.Property<int>("Salary")
                    .HasColumnType("INTEGER");

                b.Property<bool>("haveToar")
                    .HasColumnType("INTEGER");

                b.Property<string>("text")
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.HasIndex("RecruiterId");

                b.ToTable("Jobs");
            });

        modelBuilder.Entity("MyJob.Entities.Recruiter", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<string>("City")
                    .HasColumnType("TEXT");

                b.Property<DateTime>("Create")
                    .HasColumnType("TEXT");

                b.Property<bool>("Deleted")
                    .HasColumnType("INTEGER");

                b.Property<string>("Gender")
                    .HasColumnType("TEXT");

                b.Property<string>("InShort")
                    .HasColumnType("TEXT");

                b.Property<DateTime>("LastActive")
                    .HasColumnType("TEXT");

                b.Property<string>("LinkedinLink")
                    .HasColumnType("TEXT");

                b.Property<string>("LogoProfile")
                    .HasColumnType("TEXT");

                b.Property<string>("Mail")
                    .HasColumnType("TEXT");

                b.Property<byte[]>("PasswordHash")
                    .HasColumnType("BLOB");

                b.Property<byte[]>("PasswordSalt")
                    .HasColumnType("BLOB");

                b.Property<string>("Phone")
                    .HasColumnType("TEXT");

                b.Property<string>("RecName")
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.ToTable("Recruiters");
            });

        modelBuilder.Entity("MyJob.Entities.Applicant", b =>
            {
                b.HasOne("MyJob.Entities.Job", "Job")
                    .WithMany("Applicants")
                    .HasForeignKey("JobId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Job");
            });

        modelBuilder.Entity("MyJob.Entities.CV", b =>
            {
                b.HasOne("MyJob.Entities.AppUser", "AppUser")
                    .WithMany("CVs")
                    .HasForeignKey("AppUserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("AppUser");
            });

        modelBuilder.Entity("MyJob.Entities.Job", b =>
            {
                b.HasOne("MyJob.Entities.Recruiter", "recruiter")
                    .WithMany("Jobs")
                    .HasForeignKey("RecruiterId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("recruiter");
            });

        modelBuilder.Entity("MyJob.Entities.AppUser", b =>
            {
                b.Navigation("CVs");
            });

        modelBuilder.Entity("MyJob.Entities.Job", b =>
            {
                b.Navigation("Applicants");
            });

        modelBuilder.Entity("MyJob.Entities.Recruiter", b =>
            {
                b.Navigation("Jobs");
            });
#pragma warning restore 612, 618
    }
}
